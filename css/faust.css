/* WEBKIT */
text {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
}

/**/
.faust-group-label {
    font-family: Arial, Verdana, Helvetica, sans;
    font-size: 13px;
    fill: rgba(199, 190, 162, 0.6);
}

.faust-tooltip-text {
    font-family: Arial, Verdana, Helvetica, sans;
    font-size: 13px;
}

.faust-button-label {
    font-family: Arial, Verdana, Helvetica, sans;
    font-size: 13px;
    fill: rgba(122, 219, 255, 0.79);
}

.faust-tgroup-label {
    font-family: Arial, Verdana, Helvetica, sans;
    font-size: 13px;
    fill: rgba(122, 219, 255, 0.79);
}

.faust-label {
    font-family: Arial, Verdana, Helvetica, sans;
    font-size: 14px;
    fill: rgba(248, 187, 208, 0.75);
}

.faust-value-text {
    font-family: Arial, Verdana, Helvetica, sans;
    font-size: 11px;
    font-weight: bold;
    fill: rgb(82, 79, 79);
}

path {
    -webkit-user-select: none;
}

rect {
    -webkit-user-select: none;
    -moz-user-select: none;
    user-select: none;
}

circle {
    -webkit-user-select: none;
}

text:hover {
    cursor: default;
}

path.faust-vbox {
    fill: white;
    stroke: black;
}

path.faust-rbutton-groove {
    fill: rgb(152, 251, 152);
    stroke: black;
}

path.faust-rbutton-handle {
    fill: grey;
    stroke: black;
}

rect.faust-hslider-handle {
    fill: black;
}

rect.faust-vslider-meter,
rect.faust-hslider-meter {
    fill: #F48FB1;
}

rect.faust-vslider-groove,
rect.faust-hslider-groove {
    /*fill : #FCE4EC;*/
    fill: black;
}

rect.faust-vslider-handle,
rect.faust-hslider-handle {
    fill: rgba(233, 30, 101, 0.63);
    stroke: rgba(233, 30, 101, 0.99);
}

rect.faust-hbargraph-curtain {
    fill: rgb(20, 20, 20);
    stroke: black;
}

/* hbargraph meters cannot be defined via CSS because their widths and
 * heights are dynamic */

rect.faust-hbargraph-meter {
    fill: url(#horizontalBarGraphMeterGradient);
    stroke: black;
}

rect.faust-vbargraph-curtain {
    fill: rgb(20, 20, 20);
    stroke: black;
}

rect.faust-vbargraph-meter {
    fill: url(#verticalBarGraphMeterGradient);
    stroke: black;
}

rect.faust-checkbox-box {
    fill: white;
    stroke: black;
}

path.faust-checkbox-check {
    fill: black;
    stroke: black;
}

rect.faust-nentry-box {
    fill: url(#numericalEntryUpGradient);
    stroke: black;
}

path.faust-nentry-operation {
    stroke: black;
}

rect.faust-button-box {
    fill: url(#buttonUpGradient);
    stroke: black;
}

rect.faust-tgroup-box {
    fill: url(#tabGroupUpGradient);
    stroke: black;
}

circle.faust-rbutton-groove {
    /*fill : rgba(233, 30, 101, 0.63);*/
    fill: url(#rotatingButtonHandleGradient);
    stroke: rgb(233, 30, 101);
}

circle.faust-rbutton-dot {
    fill: pink;
    stroke: black;
}

path.faust-rbutton-meter {
    fill: black;
}

path.faust-rbutton-mgroove {
    fill: #F48FB1;
}

/* as all of the above rectangles could be implemented as paths, we duplicate the definitions for paths */

path.faust-hslider-groove {
    fill: red;
    stroke: black;
}

path.faust-hslider-handle {
    fill: url(#horizontalSliderHandleGradient);
    stroke: black;
}

path.faust-vslider-groove {
    fill: red;
    stroke: black;
}

path.faust-vslider-handle {
    fill: url(#verticalSliderHandleGradient);
    stroke: black;
}

path.faust-hbargraph-curtain {
    fill: rgb(0, 255, 255);
    stroke: black;
}

path.faust-hbargraph-meter {
    fill: grey;
    stroke: black;
}

path.faust-vbargraph-curtain {
    fill: rgb(0, 255, 255);
    stroke: black;
}

path.faust-vbargraph-meter {
    fill: grey;
    stroke: black;
}

path.faust-checkbox-box {
    fill: white;
    stroke: black;
}

path.faust-nentry-box {
    fill: url(#numericalEntryUpGradient);
    stroke: black;
}

path.faust-button-box {
    fill: #B0B0B0;
    stroke: black;
}

/**/